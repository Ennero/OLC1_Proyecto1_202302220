/* 1. Package e importaciones */
package olc1_proyecto1_202302220.analizador;
import java_cup.runtime.Symbol;
import java.util.LinkedList;

//----------------------------------------------------------------------------------

//Para el error (yo en esta carrera)
terminal ERROR_LEXICO;

//Estructurales
terminal String STRATEGY, MATCH, MAIN;

//Acciones
terminal String C, D;

//Secciones
terminal String INITIAL, RULES;

//Flujo
terminal String IF, THEN, ELSE;

//Funciones especiales dentro de strategy
terminal String GET_MOVE, LAST_MOVE, GET_LAST_N_MOVES, GET_MOVES_COUNT;

//Funciones relacionada a match
terminal String ROUND_NUMBER, PLAYERS, STRATEGIES, ROUNDS;

//Historiales
terminal String OPPONENT_HISTORY, SELF_HISTORY;

//Booleanos
terminal String TRUE, FALSE;

//Puntajes
terminal String MUTUAL_COOPERATION, MUTUAL_DEFECTION, BETRAYAL_REWARD, BETRAYAL_PUNISHMENT;

//Configuración
terminal String SCORING, RUN, WITH, SEED;

//Logicas
terminal String AND, OR, NOT;

//Comparadores
terminal String IGUAL, NO_IGUAL, MENOR, MAYOR, MENOR_IGUAL, MAYOR_IGUAL;

//Otros
terminal String ABRE_CORCHETE, CIERRA_CORCHETE, ABRE_LLAVE, CIERRA_LLAVE, ABRE_PARENTESIS, CIERRA_PARENTESIS, COMA, DOS_PUNTOS;

//Tipos
terminal String ENTERO, FLOTANTE;

//Identificador
terminal String ID;

//Otros
terminal String RANDOM;

//----------------------------------------------------------------------------------

//Init y bloques
non terminal ini, bloque_Strategy, bloque_Match, bloque_Main;

//Lo que vendrá con el bloque de strategy
non terminal  strategy_Cuerpo, regla_Inicial, reglas, lista_Reglas;

//Lo que vendra con el bloque de match
non terminal match_Cuerpo, puntuacion;

//Lo que vendrá con el bloque de Main
non terminal main_Cuerpo;
non terminal match_Lista;

//Intrucciones
non terminal instruccion;

//Expresiones
non terminal comparacion, logica, desicion, funcion, lista, elemento, expresion;

//Para la partida
non terminal jugadores, rondas, puntuaciones, puntos;



//---------------------------------------------------------------------------------
precedence left OR, AND, IGUAL, NO_IGUAL, MENOR, MAYOR, MENOR_IGUAL, MAYOR_IGUAL;
precedence nonassoc NOT;
//-------------------------------------------------------------------------------

start with ini;

ini ::= instruccion ini 
| instruccion
;

instruccion ::= bloque_Strategy
| bloque_Match
| bloque_Main
;


//-------------------------------------
//BLOQUE DE STRATEGIAS

bloque_Strategy ::= STRATEGY ID ABRE_LLAVE strategy_Cuerpo CIERRA_LLAVE;

strategy_Cuerpo ::= regla_Inicial reglas;

regla_Inicial ::= INITIAL DOS_PUNTOS desicion;

reglas ::= RULES DOS_PUNTOS ABRE_CORCHETE lista_Reglas CIERRA_CORCHETE;

lista_Reglas::= IF expresion THEN expresion COMA lista_Reglas
| IF expresion THEN expresion
| ELSE expresion
;

//-------------------------------------
//BLOQUE DE PARTIDAS

bloque_Match ::= MATCH ID ABRE_LLAVE match_Cuerpo CIERRA_LLAVE;

match_Cuerpo ::= jugadores rondas puntuaciones;

jugadores ::= PLAYERS STRATEGIES DOS_PUNTOS ABRE_CORCHETE ID COMA
                ID CIERRA_CORCHETE;

rondas ::= ROUNDS DOS_PUNTOS expresion;

puntuaciones ::= SCORING DOS_PUNTOS ABRE_LLAVE puntos CIERRA_LLAVE;

puntos ::= puntuacion COMA puntuacion COMA puntuacion COMA puntuacion;

puntuacion ::= MUTUAL_COOPERATION DOS_PUNTOS expresion
| MUTUAL_DEFECTION DOS_PUNTOS expresion
| BETRAYAL_REWARD DOS_PUNTOS expresion
| BETRAYAL_PUNISHMENT DOS_PUNTOS expresion
;

//-------------------------------------
//BLOQUE DE INICIO

bloque_Main ::= MAIN ABRE_LLAVE main_Cuerpo CIERRA_LLAVE;

main_Cuerpo ::= RUN ABRE_CORCHETE match_Lista CIERRA_CORCHETE WITH 
        ABRE_LLAVE SEED DOS_PUNTOS expresion CIERRA_LLAVE
;

//Aqui el auxiliar colocó que no se "reproducía la lista" ****
//Así que lo probaré como si sí y luego veo si es viable tal y como lo ando haciendo ****

match_Lista ::= match_Lista COMA ID 
| ID
;


//-------------------------------------
//PARTES COMPLEMENTARIAS DEL CODIGO :)

desicion ::= C
| D
;

expresion ::= comparacion
| logica
| desicion
| funcion
| lista
| RANDOM
| OPPONENT_HISTORY
| SELF_HISTORY
| ROUND_NUMBER
| TRUE
| FALSE
| ENTERO
| FLOTANTE
;

comparacion ::= expresion IGUAL expresion
| expresion NO_IGUAL expresion 
| expresion MENOR expresion
| expresion MAYOR expresion
| expresion MENOR_IGUAL expresion
| expresion MAYOR_IGUAL expresion
;

logica ::= expresion AND expresion
| expresion OR expresion
| NOT expresion
;

funcion ::= GET_MOVE ABRE_PARENTESIS expresion COMA expresion CIERRA_PARENTESIS
| LAST_MOVE ABRE_PARENTESIS expresion CIERRA_PARENTESIS
| GET_MOVES_COUNT ABRE_PARENTESIS expresion COMA expresion CIERRA_PARENTESIS
| GET_LAST_N_MOVES ABRE_PARENTESIS expresion COMA expresion CIERRA_PARENTESIS
;

lista ::= ABRE_CORCHETE elemento CIERRA_CORCHETE ;

elemento ::= elemento COMA expresion
| expresion
;
